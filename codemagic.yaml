workflows:
    # Ionic Capacitor workflows
    ionic-capacitor-ios-app:
        name: Ionic App
        working_directory: app
        max_build_duration: 120
        instance_type: mac_mini_m1
        environment:
            groups:
                - app_store_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
                - app_env # <-- Vue App enviornment variables
            vars:
                # Ionic Capacitor Xcode worskspace and scheme
                XCODE_WORKSPACE: "ios/App/App.xcworkspace" # <- Update with your workspace name
                XCODE_SCHEME: "App" # <- Update with your workspace scheme
            node: 16.13.2
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
                - pull_request
            branch_patterns:
                - pattern: "*"
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies for Ionic project
              script: npm install
            - name: Cocoapods installation
              script: cd ios/App && pod install
            - name: Initialize environment variables
              script: printenv | grep VUE_APP && printenv | grep VUE_APP | sed 's/\([^=]*=\)\(.*\)/\1"\2"/' > .env
            - name: Build web app
              script: ionic build
            - name: Update dependencies and copy web assets to native project
              script:
                  npx cap sync # <- update native dependencies and copy web assets to native project
                  # npx cap copy # <- use this is you don't need to update native dependencies
            - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
              script: keychain initialize
              # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
              #   script: |
              #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
              #     mkdir -p "$PROFILES_HOME"
              #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
              #     echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
              #     echo "Saved provisioning profile $PROFILE_PATH"
            - name: Fetch signing files
              script:
                  app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_DEVELOPMENT --create --verbose
                  # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
            - name: Add certificates to keychain
              script: keychain add-certificates
            - name: Increment build number
              script: |
                  #!/bin/sh
                  set -e
                  set -x
                  cd ios/App
                  agvtool new-version -all $(($BUILD_NUMBER +1))
            - name: Set up code signing settings on Xcode project
              script: xcode-project use-profiles
            - name: Build ipa for distribution
              script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        # publishing:
        #     app_store_connect:
        #         api_key: $APP_STORE_CONNECT_PRIVATE_KEY      # Contents of the API key
        #         key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER    # Alphanumeric value that identifies the API key
        #         issuer_id: $APP_STORE_CONNECT_ISSUER_ID      # Alphanumeric value that identifies who created the API key
        #         submit_to_testflight: false        # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.
        #     email:
        #         recipients:
        #             - andershallemiversen@hotmail.com
        #         notify:
        #             success: false     # To not receive a notification when a build succeeds
        #             failure: true
